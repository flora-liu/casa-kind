generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [uuid_ossp(map: "uuid-ossp")]
}

model profile {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName  String?
  lastName   String?
  email      String?
  created_at DateTime @default(now()) @db.Date
  entry      entry[]
}

model category {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title              String               @unique
  slug               String               @unique
  description        String?
  category_to_prompt category_to_prompt[]
}

model prompt {
  id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title               String
  is_system_generated Boolean?
  category_to_prompt  category_to_prompt[]
  daily_prompt        daily_prompt[]
  entry               entry[]
}

model entry {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Date
  user_id    String   @db.Uuid
  content    String
  prompt_id  String?  @db.Uuid
  prompt     prompt?  @relation(fields: [prompt_id], references: [id])
  profile    profile  @relation(fields: [user_id], references: [id])
}

model category_to_prompt {
  category_id String   @db.Uuid
  prompt_id   String   @db.Uuid
  category    category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  prompt      prompt   @relation(fields: [prompt_id], references: [id], onDelete: Cascade)

  @@unique([category_id, prompt_id], map: "_category_to_prompt_AB_unique")
  @@index([prompt_id], map: "_category_to_prompt_B_index")
  @@map("_category_to_prompt")
}

model daily_prompt {
  created_at DateTime @default(now()) @db.Timestamptz(6)
  prompt_id  String?  @db.Uuid
  id         String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prompt     prompt?  @relation(fields: [prompt_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
